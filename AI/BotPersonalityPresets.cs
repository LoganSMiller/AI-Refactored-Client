// <auto-generated>
//   This file is part of AI-Refactored, an open-source project focused on realistic AI behavior in Escape from Tarkov.
//   Licensed under the MIT License. See LICENSE in the repository root for more information.
//
//   THIS FILE IS SYSTEMATICALLY MANAGED.
//   Please follow strict StyleCop, ReSharper, and AI-Refactored code standards for all modifications.
// </auto-generated>

#nullable enable

namespace AIRefactored.AI
{
    using System;
    using System.Collections.Generic;
    using UnityEngine;

    /// <summary>
    /// Provides randomized, personality-based bot profile presets.
    /// Supports type-driven defaults blended with organic trait variance.
    /// </summary>
    public static class BotPersonalityPresets
    {
        /// <summary>
        /// Cached personality preset mappings, generated at startup.
        /// </summary>
        public static readonly Dictionary<PersonalityType, BotPersonalityProfile> Presets;

        static BotPersonalityPresets()
        {
            PersonalityType[] types = (PersonalityType[])Enum.GetValues(typeof(PersonalityType));
            Presets = new Dictionary<PersonalityType, BotPersonalityProfile>(types.Length);

            for (int i = 0; i < types.Length; i++)
            {
                PersonalityType type = types[i];
                Presets[type] = GenerateProfile(type);
            }
        }

        /// <summary>
        /// Generates a randomized bot profile using base traits and blended variance.
        /// </summary>
        /// <param name="type">The personality type to generate a profile for.</param>
        /// <returns>A randomized bot personality profile.</returns>
        public static BotPersonalityProfile GenerateProfile(PersonalityType type)
        {
            BotPersonalityProfile p = new BotPersonalityProfile
            {
                Personality = type,
                PreferredMission = MissionBias.Random,
                MovementJitter = 0.2f,
                SideStepBias = 0.5f,
                LeanPeekFrequency = 0.5f,
                CornerCheckPauseTime = 0.35f,
                LeaningStyle = LeanPreference.Conservative,
                SuppressiveFireBias = 0.2f
            };

            switch (type)
            {
                case PersonalityType.Adaptive:
                    p.Caution = 0.5f;
                    p.AggressionLevel = 0.6f;
                    p.CommunicationLevel = 0.8f;
                    p.ReactionSpeed = 0.75f;
                    p.SuppressiveFireBias = 0.4f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    break;

                case PersonalityType.Aggressive:
                    p.AggressionLevel = 1f;
                    p.RetreatThreshold = 0.05f;
                    p.CommunicationLevel = 0.6f;
                    p.SuppressiveFireBias = 0.5f;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    break;

                case PersonalityType.Balanced:
                    p.Accuracy = 0.7f;
                    p.AggressionLevel = 0.6f;
                    p.Caution = 0.5f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    p.SuppressiveFireBias = 0.2f;
                    break;

                case PersonalityType.Camper:
                    p.IsCamper = true;
                    p.EngagementRange = 120f;
                    p.Accuracy = 0.85f;
                    p.SuppressionSensitivity = 0.7f;
                    p.PreferredMission = MissionBias.Loot;
                    p.LeaningStyle = LeanPreference.Never;
                    p.SuppressiveFireBias = 0.8f;
                    break;

                case PersonalityType.Cautious:
                    p.Caution = 0.95f;
                    p.RetreatThreshold = 0.6f;
                    p.ReactionTime = 0.3f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    p.SuppressiveFireBias = 0.3f;
                    break;

                case PersonalityType.ColdBlooded:
                    p.FlinchThreshold = 1f;
                    p.ReactionTime = 0.3f;
                    p.Caution = 0.8f;
                    p.SuppressiveFireBias = 0.4f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    break;

                case PersonalityType.Defensive:
                    p.Caution = 0.8f;
                    p.CommunicationLevel = 0.9f;
                    p.RetreatThreshold = 0.5f;
                    p.SuppressiveFireBias = 0.5f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    break;

                case PersonalityType.Dumb:
                    p.IsDumb = true;
                    p.Accuracy = 0.3f;
                    p.AggressionLevel = 0.2f;
                    p.ReactionSpeed = 0.25f;
                    p.LeaningStyle = LeanPreference.Never;
                    p.SuppressiveFireBias = 0.1f;
                    break;

                case PersonalityType.Explorer:
                    p.EngagementRange = 110f;
                    p.RiskTolerance = 0.9f;
                    p.Caution = 0.3f;
                    p.PreferredMission = MissionBias.Quest;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    p.SuppressiveFireBias = 0.4f;
                    break;

                case PersonalityType.Fearful:
                    p.IsFearful = true;
                    p.Accuracy = 0.4f;
                    p.RetreatThreshold = 0.7f;
                    p.Caution = 0.9f;
                    p.AggressionLevel = 0.1f;
                    p.PreferredMission = MissionBias.Loot;
                    p.LeaningStyle = LeanPreference.Conservative;
                    p.SuppressiveFireBias = 0.25f;
                    break;

                case PersonalityType.Frenzied:
                    p.IsFrenzied = true;
                    p.AggressionLevel = 1f;
                    p.ChaosFactor = 1f;
                    p.Accuracy = 0.45f;
                    p.AccuracyUnderFire = 0.2f;
                    p.PreferredMission = MissionBias.Fight;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    p.SuppressiveFireBias = 0.1f;
                    break;

                case PersonalityType.Greedy:
                    p.RiskTolerance = 0.8f;
                    p.Cohesion = 0.4f;
                    p.PreferredMission = MissionBias.Loot;
                    p.SuppressiveFireBias = 0.3f;
                    break;

                case PersonalityType.Heroic:
                    p.AggressionLevel = 0.8f;
                    p.RiskTolerance = 0.85f;
                    p.CommunicationLevel = 1f;
                    p.Cohesion = 1f;
                    p.FlankBias = 0.6f;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    p.SuppressiveFireBias = 0.7f;
                    break;

                case PersonalityType.Loner:
                    p.Cohesion = 0f;
                    p.CommunicationLevel = 0.1f;
                    p.SuppressiveFireBias = 0.1f;
                    break;

                case PersonalityType.Methodical:
                    p.Caution = 0.75f;
                    p.MovementJitter = 0.1f;
                    p.LeanPeekFrequency = 0.7f;
                    p.CornerCheckPauseTime = 0.5f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    p.SuppressiveFireBias = 0.6f;
                    break;

                case PersonalityType.Paranoid:
                    p.ReactionSpeed = 0.85f;
                    p.Caution = 0.95f;
                    p.FlinchThreshold = 0.9f;
                    p.SideStepBias = 0.6f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    p.SuppressiveFireBias = 0.5f;
                    break;

                case PersonalityType.Patient:
                    p.ReactionTime = 0.5f;
                    p.Accuracy = 0.9f;
                    p.SuppressiveFireBias = 0.4f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    break;

                case PersonalityType.Reckless:
                    p.AggressionLevel = 0.95f;
                    p.RetreatThreshold = 0f;
                    p.ChaosFactor = 0.8f;
                    p.SuppressiveFireBias = 0.3f;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    break;

                case PersonalityType.RiskTaker:
                    p.RiskTolerance = 1f;
                    p.RetreatThreshold = 0.1f;
                    p.AggressionLevel = 0.7f;
                    p.SuppressiveFireBias = 0.35f;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    break;

                case PersonalityType.SilentHunter:
                    p.IsSilentHunter = true;
                    p.Accuracy = 0.95f;
                    p.CommunicationLevel = 0.1f;
                    p.PreferredMission = MissionBias.Quest;
                    p.LeaningStyle = LeanPreference.Never;
                    p.SuppressiveFireBias = 0.0f;
                    break;

                case PersonalityType.Sniper:
                    p.EngagementRange = 130f;
                    p.Accuracy = 0.95f;
                    p.FlinchThreshold = 0.2f;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    p.SuppressiveFireBias = 0.3f;
                    break;

                case PersonalityType.Strategic:
                    p.Caution = 0.7f;
                    p.CommunicationLevel = 0.9f;
                    p.FlankBias = 0.8f;
                    p.SuppressiveFireBias = 0.5f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    break;

                case PersonalityType.Stubborn:
                    p.IsStubborn = true;
                    p.RetreatThreshold = 0f;
                    p.Cohesion = 0.2f;
                    p.SuppressiveFireBias = 0.5f;
                    break;

                case PersonalityType.Tactical:
                    p.Accuracy = 0.85f;
                    p.FlinchThreshold = 0.6f;
                    p.RepositionPriority = 0.9f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    p.SuppressiveFireBias = 0.6f;
                    break;

                case PersonalityType.TeamPlayer:
                    p.CommunicationLevel = 1f;
                    p.Cohesion = 1f;
                    p.RiskTolerance = 0.5f;
                    p.SuppressiveFireBias = 0.45f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    break;

                case PersonalityType.Unpredictable:
                    p.ChaosFactor = 1f;
                    p.SuppressiveFireBias = 0.3f;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    break;

                case PersonalityType.Vengeful:
                    p.AggressionLevel = 0.9f;
                    p.CommunicationLevel = 0.2f;
                    p.RetreatThreshold = 0.1f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    p.SuppressiveFireBias = 0.4f;
                    break;

                case PersonalityType.Vigilant:
                    p.ReactionSpeed = 1f;
                    p.ReactionTime = 0.15f;
                    p.FlinchThreshold = 0.65f;
                    break;

                case PersonalityType.Calculating:
                    p.FlinchThreshold = 0.8f;
                    p.Caution = 0.7f;
                    p.RepositionPriority = 1f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    p.SuppressiveFireBias = 0.5f;
                    break;

                case PersonalityType.Panicked:
                    p.FlinchThreshold = 0.1f;
                    p.ReactionSpeed = 0.95f;
                    p.Caution = 1f;
                    p.ChaosFactor = 1f;
                    p.RetreatThreshold = 0.9f;
                    p.SuppressiveFireBias = 0.2f;
                    p.LeaningStyle = LeanPreference.Never;
                    break;

                case PersonalityType.Stoic:
                    p.FlinchThreshold = 1f;
                    p.ReactionTime = 0.35f;
                    p.MovementJitter = 0f;
                    p.SuppressiveFireBias = 0.3f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    break;

                case PersonalityType.Bulldozer:
                    p.AggressionLevel = 1f;
                    p.RetreatThreshold = 0f;
                    p.FlinchThreshold = 0.9f;
                    p.SuppressiveFireBias = 0.6f;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    break;

                case PersonalityType.Covert:
                    p.PreferredMission = MissionBias.Quest;
                    p.CommunicationLevel = 0.1f;
                    p.SuppressiveFireBias = 0.1f;
                    p.LeaningStyle = LeanPreference.Never;
                    break;

                case PersonalityType.Cowardly:
                    p.Caution = 1f;
                    p.RetreatThreshold = 1f;
                    p.AggressionLevel = 0f;
                    p.SuppressiveFireBias = 0.0f;
                    p.LeaningStyle = LeanPreference.Never;
                    break;

                case PersonalityType.Disruptor:
                    p.ChaosFactor = 1f;
                    p.AggressionLevel = 0.6f;
                    p.SuppressiveFireBias = 0.7f;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    break;

                case PersonalityType.Supportive:
                    p.CommunicationLevel = 1f;
                    p.FlankBias = 0.5f;
                    p.SuppressiveFireBias = 0.75f;
                    p.Cohesion = 1f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    break;

                case PersonalityType.Hunter:
                    p.Accuracy = 0.85f;
                    p.PreferredMission = MissionBias.Fight;
                    p.SuppressiveFireBias = 0.4f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    break;

                case PersonalityType.Stalker:
                    p.Accuracy = 0.8f;
                    p.Caution = 0.6f;
                    p.SuppressiveFireBias = 0.3f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    break;

                case PersonalityType.Vigilante:
                    p.AggressionLevel = 0.7f;
                    p.FlankBias = 0.7f;
                    p.SuppressiveFireBias = 0.6f;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    break;

                case PersonalityType.Sentinel:
                    p.RepositionPriority = 0f;
                    p.Cohesion = 0.8f;
                    p.SuppressiveFireBias = 0.6f;
                    p.LeaningStyle = LeanPreference.Conservative;
                    break;

                case PersonalityType.Erratic:
                    p.ChaosFactor = 1f;
                    p.AggressionLevel = 0.5f;
                    p.Caution = 0.5f;
                    p.SuppressiveFireBias = 0.4f;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    break;

                case PersonalityType.Cowboy:
                    p.AggressionLevel = 0.9f;
                    p.Cohesion = 0.1f;
                    p.SuppressiveFireBias = 0.2f;
                    p.LeaningStyle = LeanPreference.Aggressive;
                    break;

                case PersonalityType.Saboteur:
                    p.PreferredMission = MissionBias.Loot;
                    p.CommunicationLevel = 0.3f;
                    p.RiskTolerance = 0.9f;
                    p.SuppressiveFireBias = 0.2f;
                    p.LeaningStyle = LeanPreference.Never;
                    break;
            }

            ApplyRandomBlend(p);
            return p;
        }

        /// <summary>
        /// Adds random variation to create behavioral diversity among same-type bots.
        /// </summary>
        /// <param name="p">The profile to modify.</param>
        private static void ApplyRandomBlend(BotPersonalityProfile p)
        {
            float chaos = p.ChaosFactor;

            p.Accuracy += UnityEngine.Random.Range(-0.1f, 0.15f);
            p.AggressionLevel += UnityEngine.Random.Range(-0.1f, 0.15f);
            p.Cohesion += UnityEngine.Random.Range(-0.2f, 0.2f);
            p.CommunicationLevel += UnityEngine.Random.Range(-0.1f, 0.15f);
            p.MovementJitter += UnityEngine.Random.Range(-0.1f, 0.15f);
            p.LeanPeekFrequency += UnityEngine.Random.Range(-0.2f, 0.2f);
            p.CornerCheckPauseTime += UnityEngine.Random.Range(-0.1f, 0.15f);
            p.SideStepBias += UnityEngine.Random.Range(-0.15f, 0.2f);
            p.ReactionSpeed += UnityEngine.Random.Range(-0.1f, 0.1f);
            p.ReactionTime += UnityEngine.Random.Range(-0.05f, 0.1f);
            p.FlankBias += UnityEngine.Random.Range(-0.1f, 0.15f);
            p.SuppressionSensitivity += UnityEngine.Random.Range(-0.1f, 0.1f);
            p.FlinchThreshold += UnityEngine.Random.Range(-0.1f, 0.1f);
            p.RetreatThreshold += UnityEngine.Random.Range(-0.1f, 0.1f);
            p.RepositionPriority += UnityEngine.Random.Range(-0.1f, 0.1f);
            p.RiskTolerance += UnityEngine.Random.Range(-0.1f, 0.1f);
            p.SuppressiveFireBias += UnityEngine.Random.Range(-0.05f, 0.1f);

            p.Accuracy = Mathf.Clamp01(p.Accuracy);
            p.AggressionLevel = Mathf.Clamp01(p.AggressionLevel);
            p.CommunicationLevel = Mathf.Clamp01(p.CommunicationLevel);
            p.Cohesion = Mathf.Clamp01(p.Cohesion);
            p.MovementJitter = Mathf.Clamp(p.MovementJitter, 0f, 0.5f);
            p.ReactionSpeed = Mathf.Clamp01(p.ReactionSpeed);
            p.ReactionTime = Mathf.Clamp(p.ReactionTime, 0.1f, 0.5f);
            p.SideStepBias = Mathf.Clamp01(p.SideStepBias);
            p.LeanPeekFrequency = Mathf.Clamp01(p.LeanPeekFrequency);
            p.FlankBias = Mathf.Clamp01(p.FlankBias);
            p.SuppressionSensitivity = Mathf.Clamp01(p.SuppressionSensitivity);
            p.FlinchThreshold = Mathf.Clamp01(p.FlinchThreshold);
            p.RetreatThreshold = Mathf.Clamp01(p.RetreatThreshold);
            p.RepositionPriority = Mathf.Clamp01(p.RepositionPriority);
            p.RiskTolerance = Mathf.Clamp01(p.RiskTolerance);
            p.SuppressiveFireBias = Mathf.Clamp01(p.SuppressiveFireBias);
        }
    }
}
