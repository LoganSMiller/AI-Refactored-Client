// <auto-generated>
//   This file is part of AI-Refactored, an open-source project focused on realistic AI behavior in Escape from Tarkov.
//   Licensed under the MIT License. See LICENSE in the repository root for more information.
//
//   THIS FILE IS SYSTEMATICALLY MANAGED.
//   Please follow strict StyleCop, ReSharper, and AI-Refactored code standards for all modifications.
// </auto-generated>

#nullable enable

namespace AIRefactored.AI
{
    using System;

    /// <summary>
    /// Defines a full personality configuration for AI bots, including behavior flags,
    /// tactical parameters, suppression response, and mission preferences.
    /// </summary>
    public class BotPersonalityProfile
    {
        #region Personality Parameters

        public float Accuracy { get; set; } = 0.7f;
        public float AccuracyUnderFire { get; set; } = 0.4f;
        public float AggressionLevel { get; set; } = 0.6f;
        public float Caution { get; set; } = 0.5f;
        public float ChaosFactor { get; set; } = 0f;
        public float Cohesion { get; set; } = 0.75f;
        public float CommunicationLevel { get; set; } = 0.6f;
        public float CornerCheckPauseTime { get; set; } = 0.35f;
        public float EngagementRange { get; set; } = 80f;
        public float FlankBias { get; set; } = 0.5f;
        public float FlinchThreshold { get; set; } = 0.4f;
        public float LeanPeekFrequency { get; set; } = 0.5f;
        public float MovementJitter { get; set; } = 0.2f;
        public float ReactionSpeed { get; set; } = 0.65f;
        public float ReactionTime { get; set; } = 0.25f;
        public float RepositionPriority { get; set; } = 0.8f;
        public float RetreatThreshold { get; set; } = 0.3f;
        public float RiskTolerance { get; set; } = 0.5f;
        public float SideStepBias { get; set; } = 0.5f;
        public float SuppressionSensitivity { get; set; } = 0.4f;
        public float SuppressiveFireBias { get; set; } = 0.2f;

        /// <summary>
        /// How greedy the bot is when deciding to extract. 0 = extract early, 1 = hold for more loot.
        /// </summary>
        public float Greed { get; set; } = 0.5f;

        /// <summary>
        /// How tolerant the bot is of being stuck before deciding to extract. 0 = extract quickly, 1 = wait longer.
        /// </summary>
        public float StuckTolerance { get; set; } = 0.5f;

        #endregion

        #region Behavior Flags

        public bool IsCamper { get; set; } = false;
        public bool IsDumb { get; set; } = false;
        public bool IsFearful { get; set; } = false;
        public bool IsFrenzied { get; set; } = false;
        public bool IsSadistic { get; set; } = false;
        public bool IsSilentHunter { get; set; } = false;
        public bool IsStubborn { get; set; } = false;
        public bool IsTeamPlayer { get; set; } = false;

        #endregion

        #region Derived Properties

        public bool CanFlank => this.FlankBias > 0.05f;
        public bool CanRetreat => this.RetreatThreshold > 0.05f;
        public bool CanSuppress => this.SuppressiveFireBias > 0.05f;

        #endregion

        #region Identity

        public PersonalityType Personality { get; set; } = PersonalityType.Balanced;
        public MissionBias PreferredMission { get; set; } = MissionBias.Random;
        public LeanPreference LeaningStyle { get; set; } = LeanPreference.Conservative;

        #endregion

        #region Methods

        public BotPersonalityProfile Clone()
        {
            return (BotPersonalityProfile)this.MemberwiseClone();
        }

        public override string ToString()
        {
            return $"[{this.Personality}] Aggro={this.AggressionLevel}, Acc={this.Accuracy}, Chaos={this.ChaosFactor}, Cohesion={this.Cohesion}";
        }

        #endregion
    }

    #region Enums

    public enum PersonalityType
    {
        Adaptive, Aggressive, Balanced, Camper, Cautious, ColdBlooded, Defensive, Dumb, Explorer,
        Fearful, Frenzied, Greedy, Heroic, Loner, Methodical, Paranoid, Patient, Reckless, RiskTaker,
        SilentHunter, Sniper, Strategic, Stubborn, Tactical, TeamPlayer, Unpredictable, Vengeful, Vigilant,
        Calculating, Panicked, Stoic, Bulldozer, Covert, Cowardly, Disruptor, Supportive, Hunter,
        Stalker, Vigilante, Sentinel, Erratic, Cowboy, Saboteur
    }

    public enum MissionBias
    {
        Random,
        Loot,
        Fight,
        Quest
    }

    public enum LeanPreference
    {
        Never,
        Conservative,
        Aggressive
    }

    #endregion
}
