// <auto-generated>
//   AI-Refactored: BotOverlayType.cs (Ultimate Arbitration Enum – Mastermoveplan, Platinum+, June 2025, Ultra-Realism, Full Expansion)
//   Declares all overlay/event intent types for centralized arbitration, anti-spam, and triple-guard movement enforcement.
//   SYSTEMATICALLY MANAGED. Expand this enum as new overlay/event handlers are added. MIT License.
// </auto-generated>

namespace AIRefactored.AI.Core
{
    /// <summary>
    /// Enumerates all overlay/event intent types for arbitration and anti-parallel control
    /// across AIRefactored overlay and event-driven bot logic.
    /// Expand with new handlers for arbitration, deduplication, and intent gating.
    /// </summary>
    public enum BotOverlayType
    {
        /// <summary>No overlay (default/idle/none).</summary>
        None = 0,

        /// <summary>Direct attack intent—advance/charge/close on enemy (AttackHandler).</summary>
        Attack = 1,

        /// <summary>Engagement overlay—advance/cautious approach to last known enemy (EngageHandler).</summary>
        Engage = 2,

        /// <summary>Fallback overlay—retreat from danger, suppression, or squad withdrawal (FallbackHandler/PanicHandler).</summary>
        Fallback = 3,

        /// <summary>Investigation overlay—investigate sound, enemy last seen, or tactical mystery (InvestigateHandler).</summary>
        Investigate = 4,

        /// <summary>Patrol/idle overlay—general map patrol, wander, non-combat movement (PatrolHandler/idle).</summary>
        Patrol = 5,

        /// <summary>
        /// Vision/line-of-sight arbitration—intent for perception, scanning, or tracking (BotVisionSystem/TrackedEnemyVisibility).
        /// Used for gating vision-dependent overlays and AIRefactored perception systems.
        /// </summary>
        Vision = 6,

        /// <summary>Loot overlay—intent to loot items/containers (BotLootScanner, DeadBodyScanner).</summary>
        Loot = 7,

        /// <summary>Suppression overlay—intent to suppress or respond to incoming suppression (SuppressionReaction).</summary>
        Suppression = 8,

        /// <summary>Panic overlay—blindness, flashbang, panic, composure break (PanicHandler, flash/flare).</summary>
        Panic = 9,

        /// <summary>Squad/formation overlay—move for group sync, squad re-form, leader-follow (GroupBehavior/EchoCoordinator).</summary>
        SquadMove = 10,

        /// <summary>Cover overlay—take cover, change stance, peek (CoverPlanner, retreat to cover point).</summary>
        Cover = 11,

        /// <summary>Door/environmental interaction (BotDoorInteractionSystem, door open/close/breach).</summary>
        DoorInteract = 12,

        /// <summary>Extraction overlay—move toward exit/exfil (BotExtractionDecisionSystem, exfil logic).</summary>
        Extract = 13,

        /// <summary>Medical overlay—healing self or others, medical intent (BotMedicLogic).</summary>
        Medical = 14,

        /// <summary>Dead body overlay—intent to loot or interact with corpses (BotDeadBodyScanner).</summary>
        DeadBody = 15,

        /// <summary>
        /// Anticipation overlay—waiting, peeking, fakeout, hesitation before action (arbitration/fakeout logic).
        /// Used to prevent simultaneous overlays during human-like anticipation or indecision.
        /// </summary>
        Anticipation = 16,

        /// <summary>
        /// Idle overlay—idle standing, no intent, or look/scan/idle arbitration (BotLookController).
        /// </summary>
        Idle = 17,

        /// <summary>
        /// Flank overlay—intent to flank or reposition on enemy (FlankCoordinator, FlankPositionPlanner).
        /// </summary>
        Flank = 18,

        /// <summary>
        /// Retreat overlay—forced retreat or fallback (specialized, distinct from Fallback for dispatcher clarity).
        /// </summary>
        Retreat = 19,

        /// <summary>
        /// Special overlays—reserved for custom/event/scripted overlays, debug actions, or temporary arbitration.
        /// Used by mod developers or for internal expansion only.
        /// </summary>
        Special = 100,

        /// <summary>
        /// Reserved overlays—systematic expansion, do not use unless explicitly implementing a new overlay/event handler.
        /// These help future-proof the enum for new types without breaking compatibility.
        /// </summary>
        Reserved1 = 101,
        Reserved2 = 102,
        Reserved3 = 103,
        Reserved4 = 104,
        Reserved5 = 105,
    }
}
