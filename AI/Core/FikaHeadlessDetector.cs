// <auto-generated>
//   This file is part of AI-Refactored, an open-source project focused on realistic AI behavior in Escape from Tarkov.
//   Licensed under the MIT License. See LICENSE in the repository root for more information.
//
//   THIS FILE IS SYSTEMATICALLY MANAGED.
//   Please follow strict StyleCop, ReSharper, and AI-Refactored code standards for all modifications.
// </auto-generated>

#nullable enable

namespace AIRefactored.AI.Core
{
    using System;
    using UnityEngine;

    /// <summary>
    /// Detects if the client is running in FIKA Headless Host mode (i.e., -batchmode or -nographics).
    /// Allows runtime branching for systems that must avoid Unity graphics or main-thread dependencies.
    /// </summary>
    public static class FikaHeadlessDetector
    {
        #region Static Constructor

        /// <summary>
        /// Initializes static data for <see cref="FikaHeadlessDetector"/>.
        /// </summary>
        static FikaHeadlessDetector()
        {
            IsHeadless = Application.isBatchMode
                         || Environment.CommandLine.IndexOf("-nographics", StringComparison.OrdinalIgnoreCase) >= 0;
        }

        #endregion

        #region Properties

        /// <summary>
        /// Gets a value indicating whether the client is running under headless (batchmode or nographics) mode.
        /// </summary>
        public static bool IsHeadless { get; }

        #endregion
    }
}