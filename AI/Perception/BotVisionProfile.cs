// <auto-generated>
//   This file is part of AI-Refactored, an open-source project focused on realistic AI behavior in Escape from Tarkov.
//   Licensed under the MIT License. See LICENSE in the repository root for more information.
//
//   THIS FILE IS SYSTEMATICALLY MANAGED.
//   Please follow strict StyleCop, ReSharper, and AI-Refactored code standards for all modifications.
// </auto-generated>

#nullable enable

namespace AIRefactored.AI.Perception
{
    /// <summary>
    /// Defines a bot's visual perception profile.
    /// Simulates response to light, suppression, and temporary blindness for realism.
    /// Used by <see cref="BotPerceptionSystem" /> to adjust sensory behavior dynamically.
    /// </summary>
    public sealed class BotVisionProfile
    {
        /// <summary>
        /// Default adaptation speed. Controls recovery rate from flash or flare blindness.
        /// </summary>
        private const float DefaultAdaptationSpeed = 1.25f;

        /// <summary>
        /// Default aggression response. Modulates tunnel vision when suppressed.
        /// </summary>
        private const float DefaultAggressionResponse = 0.85f;

        /// <summary>
        /// Default light sensitivity. Governs effect from flashlight or flare exposure.
        /// </summary>
        private const float DefaultLightSensitivity = 1.0f;

        /// <summary>
        /// Default maximum flash blindness multiplier.
        /// </summary>
        private const float DefaultMaxBlindness = 1.0f;

        /// <summary>
        /// Gets or sets the speed of recovery from flash or flare blindness.
        /// Higher values = faster visual clarity return. Default: 1.25.
        /// </summary>
        public float AdaptationSpeed { get; set; } = DefaultAdaptationSpeed;

        /// <summary>
        /// Gets or sets the visual penalty multiplier while under suppression.
        /// Higher values cause more tunnel vision and reduced perception.
        /// </summary>
        public float AggressionResponse { get; set; } = DefaultAggressionResponse;

        /// <summary>
        /// Gets or sets how sensitive the bot is to flashlight glare or flare bursts.
        /// </summary>
        public float LightSensitivity { get; set; } = DefaultLightSensitivity;

        /// <summary>
        /// Gets or sets the maximum flash blindness level. 1 = fully blind, 0 = immune.
        /// </summary>
        public float MaxBlindness { get; set; } = DefaultMaxBlindness;

        /// <summary>
        /// Creates a new default-configured vision profile.
        /// </summary>
        /// <returns>A new <see cref="BotVisionProfile"/> with default parameters.</returns>
        public static BotVisionProfile CreateDefault()
        {
            return new BotVisionProfile();
        }

        /// <summary>
        /// Resets all profile values to their default balanced configuration.
        /// </summary>
        public void Reset()
        {
            this.AdaptationSpeed = DefaultAdaptationSpeed;
            this.MaxBlindness = DefaultMaxBlindness;
            this.LightSensitivity = DefaultLightSensitivity;
            this.AggressionResponse = DefaultAggressionResponse;
        }
    }
}
